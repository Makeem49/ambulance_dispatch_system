
services:

  api:
    build: .
    container_name: api
    command: gunicorn --bind 0.0.0.0:8000 --access-logfile - --error-logfile - --log-level debug --timeout 240 --workers 4 app.wsgi:application
    ports:
      - "8000:8000"
    env_file:
      - .env
    develop:
      watch:
        - path: .
          action: sync
          target: /usr/local/app
        - path: .
          action: rebuild

  redis:
    image: redis:7.4.2
    container_name: redis
    ports:
      - 6370:6379
    volumes:
      - redis_data:/data

  zookeeper:
    container_name: zookeeper
    image: quay.io/debezium/zookeeper:3.0
    ports:
      - 2181:2181
      - 2882:2888
      - 3883:3888
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog

  kafka:
    container_name: kafka
    image: quay.io/debezium/kafka:3.0
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    volumes:
      - kafka_data:/kafka/data

  # postgres:
  #   container_name: postgres
  #   image: debezium/postgres:15
  #   ports:
  #     - 5432:5432
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data


  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.11.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  zookeeper_data:
  zookeeper_datalog:
  kafka_data:
  postgres_data:
  redis_data:
  elasticsearch_data:
